/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.4 at Wed Jan 22 00:20:25 2020. */

#ifndef PB_WIRECOMMS_PB_H_INCLUDED
#define PB_WIRECOMMS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _LSlaveToMaster {
    float lineAngle;
    float lineSize;
    bool onLine;
    bool lineOver;
    float lastAngle;
    int32_t frontLRF;
    int32_t rightLRF;
    int32_t backLRF;
    int32_t leftLRF;
/* @@protoc_insertion_point(struct:LSlaveToMaster) */
} LSlaveToMaster;

typedef struct _MSlaveToMaster {
    int32_t mouseDX;
    int32_t mouseDY;
/* @@protoc_insertion_point(struct:MSlaveToMaster) */
} MSlaveToMaster;

typedef struct _MasterToLSlave {
    float heading;
    bool debugLEDs[6];
/* @@protoc_insertion_point(struct:MasterToLSlave) */
} MasterToLSlave;

typedef struct _MasterToMSlave {
    int32_t frMotor;
    int32_t brMotor;
    int32_t blMotor;
    int32_t flMotor;
/* @@protoc_insertion_point(struct:MasterToMSlave) */
} MasterToMSlave;

/* Default values for struct fields */

/* Initializer values for message structs */
#define LSlaveToMaster_init_default              {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define MasterToLSlave_init_default              {0, {0, 0, 0, 0, 0, 0}}
#define MSlaveToMaster_init_default              {0, 0}
#define MasterToMSlave_init_default              {0, 0, 0, 0}
#define LSlaveToMaster_init_zero                 {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define MasterToLSlave_init_zero                 {0, {0, 0, 0, 0, 0, 0}}
#define MSlaveToMaster_init_zero                 {0, 0}
#define MasterToMSlave_init_zero                 {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define LSlaveToMaster_lineAngle_tag             1
#define LSlaveToMaster_lineSize_tag              2
#define LSlaveToMaster_onLine_tag                3
#define LSlaveToMaster_lineOver_tag              4
#define LSlaveToMaster_lastAngle_tag             5
#define LSlaveToMaster_frontLRF_tag              6
#define LSlaveToMaster_rightLRF_tag              7
#define LSlaveToMaster_backLRF_tag               8
#define LSlaveToMaster_leftLRF_tag               9
#define MSlaveToMaster_mouseDX_tag               1
#define MSlaveToMaster_mouseDY_tag               2
#define MasterToLSlave_heading_tag               1
#define MasterToLSlave_debugLEDs_tag             2
#define MasterToMSlave_frMotor_tag               1
#define MasterToMSlave_brMotor_tag               2
#define MasterToMSlave_blMotor_tag               3
#define MasterToMSlave_flMotor_tag               4

/* Struct field encoding specification for nanopb */
extern const pb_field_t LSlaveToMaster_fields[10];
extern const pb_field_t MasterToLSlave_fields[3];
extern const pb_field_t MSlaveToMaster_fields[3];
extern const pb_field_t MasterToMSlave_fields[5];

/* Maximum encoded size of messages (where known) */
#define LSlaveToMaster_size                      63
#define MasterToLSlave_size                      17
#define MSlaveToMaster_size                      22
#define MasterToMSlave_size                      44

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define WIRECOMMS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
