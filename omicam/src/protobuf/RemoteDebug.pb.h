/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Sat Feb  8 21:34:29 2020. */

#ifndef PB_REMOTEDEBUG_PB_H_INCLUDED
#define PB_REMOTEDEBUG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _RDPoint {
    int32_t x;
    int32_t y;
/* @@protoc_insertion_point(struct:RDPoint) */
} RDPoint;

typedef struct _RDRect {
    int32_t x;
    int32_t y;
    int32_t width;
    int32_t height;
/* @@protoc_insertion_point(struct:RDRect) */
} RDRect;

typedef struct _RDThreshold {
    int32_t min[3];
    int32_t max[3];
/* @@protoc_insertion_point(struct:RDThreshold) */
} RDThreshold;

typedef struct _DebugCommand {
    int32_t messageId;
    RDPoint coords;
    float orientation;
    RDThreshold allThresholds[5];
    int32_t objectId;
    bool minMax;
    int32_t colourChannel;
    int32_t value;
    int32_t robotId;
    bool isEnabled;
/* @@protoc_insertion_point(struct:DebugCommand) */
} DebugCommand;

typedef PB_BYTES_ARRAY_T(96000) DebugFrame_defaultImage_t;
typedef PB_BYTES_ARRAY_T(96000) DebugFrame_ballThreshImage_t;
typedef struct _DebugFrame {
    DebugFrame_defaultImage_t defaultImage;
    DebugFrame_ballThreshImage_t ballThreshImage;
    float temperature;
    RDRect ballRect;
    RDPoint ballCentroid;
    int32_t fps;
    int32_t frameWidth;
    int32_t frameHeight;
    RDRect cropRect;
    pb_size_t rays_count;
    double rays[128];
    pb_size_t dewarpedRays_count;
    double dewarpedRays[128];
    int32_t mirrorRadius;
    pb_size_t robotPositions_count;
    RDPoint robotPositions[2];
    pb_size_t robotOrientations_count;
    float robotOrientations[2];
    float rayInterval;
/* @@protoc_insertion_point(struct:DebugFrame) */
} DebugFrame;

typedef struct _RDMsgFrame {
    DebugFrame frame;
    DebugCommand command;
    int32_t whichMessage;
/* @@protoc_insertion_point(struct:RDMsgFrame) */
} RDMsgFrame;

/* Default values for struct fields */

/* Initializer values for message structs */
#define RDRect_init_default                      {0, 0, 0, 0}
#define RDPoint_init_default                     {0, 0}
#define RDThreshold_init_default                 {{0, 0, 0}, {0, 0, 0}}
#define DebugFrame_init_default                  {{0, {0}}, {0, {0}}, 0, RDRect_init_default, RDPoint_init_default, 0, 0, 0, RDRect_init_default, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, {RDPoint_init_default, RDPoint_init_default}, 0, {0, 0}, 0}
#define DebugCommand_init_default                {0, RDPoint_init_default, 0, {RDThreshold_init_default, RDThreshold_init_default, RDThreshold_init_default, RDThreshold_init_default, RDThreshold_init_default}, 0, 0, 0, 0, 0, 0}
#define RDMsgFrame_init_default                  {DebugFrame_init_default, DebugCommand_init_default, 0}
#define RDRect_init_zero                         {0, 0, 0, 0}
#define RDPoint_init_zero                        {0, 0}
#define RDThreshold_init_zero                    {{0, 0, 0}, {0, 0, 0}}
#define DebugFrame_init_zero                     {{0, {0}}, {0, {0}}, 0, RDRect_init_zero, RDPoint_init_zero, 0, 0, 0, RDRect_init_zero, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0, {RDPoint_init_zero, RDPoint_init_zero}, 0, {0, 0}, 0}
#define DebugCommand_init_zero                   {0, RDPoint_init_zero, 0, {RDThreshold_init_zero, RDThreshold_init_zero, RDThreshold_init_zero, RDThreshold_init_zero, RDThreshold_init_zero}, 0, 0, 0, 0, 0, 0}
#define RDMsgFrame_init_zero                     {DebugFrame_init_zero, DebugCommand_init_zero, 0}

/* Field tags (for use in manual encoding/decoding) */
#define RDPoint_x_tag                            1
#define RDPoint_y_tag                            2
#define RDRect_x_tag                             1
#define RDRect_y_tag                             2
#define RDRect_width_tag                         3
#define RDRect_height_tag                        4
#define RDThreshold_min_tag                      2
#define RDThreshold_max_tag                      3
#define DebugCommand_messageId_tag               1
#define DebugCommand_coords_tag                  2
#define DebugCommand_orientation_tag             3
#define DebugCommand_allThresholds_tag           4
#define DebugCommand_objectId_tag                5
#define DebugCommand_minMax_tag                  6
#define DebugCommand_colourChannel_tag           7
#define DebugCommand_value_tag                   8
#define DebugCommand_robotId_tag                 9
#define DebugCommand_isEnabled_tag               10
#define DebugFrame_defaultImage_tag              1
#define DebugFrame_ballThreshImage_tag           2
#define DebugFrame_temperature_tag               3
#define DebugFrame_ballRect_tag                  4
#define DebugFrame_ballCentroid_tag              5
#define DebugFrame_fps_tag                       6
#define DebugFrame_frameWidth_tag                7
#define DebugFrame_frameHeight_tag               8
#define DebugFrame_cropRect_tag                  9
#define DebugFrame_rays_tag                      10
#define DebugFrame_dewarpedRays_tag              11
#define DebugFrame_mirrorRadius_tag              12
#define DebugFrame_robotPositions_tag            13
#define DebugFrame_robotOrientations_tag         14
#define DebugFrame_rayInterval_tag               15
#define RDMsgFrame_frame_tag                     1
#define RDMsgFrame_command_tag                   2
#define RDMsgFrame_whichMessage_tag              3

/* Struct field encoding specification for nanopb */
extern const pb_field_t RDRect_fields[5];
extern const pb_field_t RDPoint_fields[3];
extern const pb_field_t RDThreshold_fields[3];
extern const pb_field_t DebugFrame_fields[16];
extern const pb_field_t DebugCommand_fields[11];
extern const pb_field_t RDMsgFrame_fields[4];

/* Maximum encoded size of messages (where known) */
#define RDRect_size                              44
#define RDPoint_size                             22
#define RDThreshold_size                         66
#define DebugFrame_size                          194540
#define DebugCommand_size                        428
#define RDMsgFrame_size                          194986

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define REMOTEDEBUG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
