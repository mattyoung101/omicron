/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Mon Dec  9 15:16:37 2019. */

#ifndef PB_REMOTEDEBUG_PB_H_INCLUDED
#define PB_REMOTEDEBUG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _DebugCommand {
    int32_t messageId;
    int32_t coordX;
    int32_t coordY;
/* @@protoc_insertion_point(struct:DebugCommand) */
} DebugCommand;

typedef PB_BYTES_ARRAY_T(96000) DebugFrame_defaultImage_t;
typedef PB_BYTES_ARRAY_T(96000) DebugFrame_ballThreshImage_t;
typedef struct _DebugFrame {
    DebugFrame_defaultImage_t defaultImage;
    DebugFrame_ballThreshImage_t ballThreshImage;
    float temperature;
/* @@protoc_insertion_point(struct:DebugFrame) */
} DebugFrame;

/* Default values for struct fields */

/* Initializer values for message structs */
#define DebugFrame_init_default                  {{0, {0}}, {0, {0}}, 0}
#define DebugCommand_init_default                {0, 0, 0}
#define DebugFrame_init_zero                     {{0, {0}}, {0, {0}}, 0}
#define DebugCommand_init_zero                   {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define DebugCommand_messageId_tag               1
#define DebugCommand_coordX_tag                  2
#define DebugCommand_coordY_tag                  3
#define DebugFrame_defaultImage_tag              1
#define DebugFrame_ballThreshImage_tag           2
#define DebugFrame_temperature_tag               3

/* Struct field encoding specification for nanopb */
extern const pb_field_t DebugFrame_fields[4];
extern const pb_field_t DebugCommand_fields[4];

/* Maximum encoded size of messages (where known) */
#define DebugFrame_size                          192013
#define DebugCommand_size                        33

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define REMOTEDEBUG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
