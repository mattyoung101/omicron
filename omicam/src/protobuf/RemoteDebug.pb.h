/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Wed Oct 23 11:14:11 2019. */

#ifndef PB_REMOTEDEBUG_PB_H_INCLUDED
#define PB_REMOTEDEBUG_PB_H_INCLUDED
#include "nanopb/pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _DebugFrame {
    pb_callback_t format;
    pb_callback_t frame;
/* @@protoc_insertion_point(struct:DebugFrame) */
} DebugFrame;

/* Default values for struct fields */

/* Initializer values for message structs */
#define DebugFrame_init_default                  {{{NULL}, NULL}, {{NULL}, NULL}}
#define DebugFrame_init_zero                     {{{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define DebugFrame_format_tag                    1
#define DebugFrame_frame_tag                     2

/* Struct field encoding specification for nanopb */
extern const pb_field_t DebugFrame_fields[3];

/* Maximum encoded size of messages (where known) */
/* DebugFrame_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define REMOTEDEBUG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
