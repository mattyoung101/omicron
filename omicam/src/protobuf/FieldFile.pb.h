/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Tue Dec 17 13:37:16 2019. */

#ifndef PB_FIELDFILE_PB_H_INCLUDED
#define PB_FIELDFILE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _FieldFile {
    int32_t unitDistance;
    pb_callback_t data;
/* @@protoc_insertion_point(struct:FieldFile) */
} FieldFile;

/* Default values for struct fields */

/* Initializer values for message structs */
#define FieldFile_init_default                   {0, {{NULL}, NULL}}
#define FieldFile_init_zero                      {0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define FieldFile_unitDistance_tag               1
#define FieldFile_data_tag                       2

/* Struct field encoding specification for nanopb */
extern const pb_field_t FieldFile_fields[3];

/* Maximum encoded size of messages (where known) */
/* FieldFile_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FIELDFILE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
