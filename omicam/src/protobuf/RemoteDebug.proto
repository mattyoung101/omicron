syntax = "proto3";

// Whenever a debug frame is encoded, this is sent to the remote client to be rendered over a TCP socket.
// It may also include geometries that the remote client is instructed to draw such as rectangles or circles
// (this is because it's much easier to get the remote JavaFX app to draw geometries than to do it manually on a JPEG buffer)
message DebugFrame {
    bytes defaultImage = 1; // the encoded image of just the normal view from the camera
    bytes threshImage = 2; // the encoded image containing the thresholded image generated by the OpenGL shader
}

// A message sent by the Omicontrol app to Omicam containing a command and some data
message DebugCommand {
    // List of commands:
    // CMD_POWER_OFF: power off the camera module, equivalent to sudo shutdown now
    // CMD_POWER_REBOOT: reboot the camera module, equivalent to sudo reboot now
    // CMD_MOVE_TO_XY: move to the given (X,Y) coordinates on the field, will need to be forwarded to ESP
    int32 messageId = 1;

    // may be set if CMD_MOVE_TO_XY is the messageId
    int32 coordX = 2;
    int32 coordY = 3;
}