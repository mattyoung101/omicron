/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.3 at Mon Aug 26 16:34:32 2019. */

#ifndef PB_I2C_PB_H_INCLUDED
#define PB_I2C_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _I2CMasterProvide {
    float direction;
    float orientation;
    float speed;
    float heading;
/* @@protoc_insertion_point(struct:I2CMasterProvide) */
} I2CMasterProvide;

typedef struct _I2CSlaveProvide {
    float lineAngle;
    float lineSize;
    bool onLine;
    bool lineOver;
    float lastAngle;
    float heading;
/* @@protoc_insertion_point(struct:I2CSlaveProvide) */
} I2CSlaveProvide;

/* Default values for struct fields */

/* Initializer values for message structs */
#define I2CSlaveProvide_init_default             {0, 0, 0, 0, 0, 0}
#define I2CMasterProvide_init_default            {0, 0, 0, 0}
#define I2CSlaveProvide_init_zero                {0, 0, 0, 0, 0, 0}
#define I2CMasterProvide_init_zero               {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define I2CMasterProvide_direction_tag           1
#define I2CMasterProvide_orientation_tag         2
#define I2CMasterProvide_speed_tag               3
#define I2CMasterProvide_heading_tag             4
#define I2CSlaveProvide_lineAngle_tag            1
#define I2CSlaveProvide_lineSize_tag             2
#define I2CSlaveProvide_onLine_tag               3
#define I2CSlaveProvide_lineOver_tag             4
#define I2CSlaveProvide_lastAngle_tag            5
#define I2CSlaveProvide_heading_tag              6

/* Struct field encoding specification for nanopb */
extern const pb_field_t I2CSlaveProvide_fields[7];
extern const pb_field_t I2CMasterProvide_fields[5];

/* Maximum encoded size of messages (where known) */
#define I2CSlaveProvide_size                     24
#define I2CMasterProvide_size                    20

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define I2C_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
