// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RemoteDebug.proto

public final class RemoteDebug {
  private RemoteDebug() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DebugFrameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DebugFrame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * the encoded image of just the normal view from the camera
     * </pre>
     *
     * <code>optional bytes defaultImage = 1;</code>
     */
    com.google.protobuf.ByteString getDefaultImage();

    /**
     * <pre>
     * the encoded image containing the thresholded image generated by the OpenGL shader
     * </pre>
     *
     * <code>optional bytes threshImage = 2;</code>
     */
    com.google.protobuf.ByteString getThreshImage();
  }
  /**
   * <pre>
   * Whenever a debug frame is encoded, this is sent to the remote client to be rendered over a TCP socket.
   * It may also include geometries that the remote client is instructed to draw such as rectangles or circles
   * (this is because it's much easier to get the remote JavaFX app to draw geometries than to do it manually on a JPEG buffer)
   * </pre>
   *
   * Protobuf type {@code DebugFrame}
   */
  public  static final class DebugFrame extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DebugFrame)
      DebugFrameOrBuilder {
    // Use DebugFrame.newBuilder() to construct.
    private DebugFrame(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DebugFrame() {
      defaultImage_ = com.google.protobuf.ByteString.EMPTY;
      threshImage_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DebugFrame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              defaultImage_ = input.readBytes();
              break;
            }
            case 18: {

              threshImage_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RemoteDebug.internal_static_DebugFrame_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RemoteDebug.internal_static_DebugFrame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RemoteDebug.DebugFrame.class, RemoteDebug.DebugFrame.Builder.class);
    }

    public static final int DEFAULTIMAGE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString defaultImage_;
    /**
     * <pre>
     * the encoded image of just the normal view from the camera
     * </pre>
     *
     * <code>optional bytes defaultImage = 1;</code>
     */
    public com.google.protobuf.ByteString getDefaultImage() {
      return defaultImage_;
    }

    public static final int THRESHIMAGE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString threshImage_;
    /**
     * <pre>
     * the encoded image containing the thresholded image generated by the OpenGL shader
     * </pre>
     *
     * <code>optional bytes threshImage = 2;</code>
     */
    public com.google.protobuf.ByteString getThreshImage() {
      return threshImage_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!defaultImage_.isEmpty()) {
        output.writeBytes(1, defaultImage_);
      }
      if (!threshImage_.isEmpty()) {
        output.writeBytes(2, threshImage_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!defaultImage_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, defaultImage_);
      }
      if (!threshImage_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, threshImage_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RemoteDebug.DebugFrame)) {
        return super.equals(obj);
      }
      RemoteDebug.DebugFrame other = (RemoteDebug.DebugFrame) obj;

      boolean result = true;
      result = result && getDefaultImage()
          .equals(other.getDefaultImage());
      result = result && getThreshImage()
          .equals(other.getThreshImage());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + DEFAULTIMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultImage().hashCode();
      hash = (37 * hash) + THRESHIMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getThreshImage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RemoteDebug.DebugFrame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteDebug.DebugFrame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteDebug.DebugFrame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RemoteDebug.DebugFrame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RemoteDebug.DebugFrame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteDebug.DebugFrame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteDebug.DebugFrame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RemoteDebug.DebugFrame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RemoteDebug.DebugFrame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RemoteDebug.DebugFrame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RemoteDebug.DebugFrame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Whenever a debug frame is encoded, this is sent to the remote client to be rendered over a TCP socket.
     * It may also include geometries that the remote client is instructed to draw such as rectangles or circles
     * (this is because it's much easier to get the remote JavaFX app to draw geometries than to do it manually on a JPEG buffer)
     * </pre>
     *
     * Protobuf type {@code DebugFrame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DebugFrame)
        RemoteDebug.DebugFrameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RemoteDebug.internal_static_DebugFrame_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RemoteDebug.internal_static_DebugFrame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RemoteDebug.DebugFrame.class, RemoteDebug.DebugFrame.Builder.class);
      }

      // Construct using RemoteDebug.DebugFrame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        defaultImage_ = com.google.protobuf.ByteString.EMPTY;

        threshImage_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RemoteDebug.internal_static_DebugFrame_descriptor;
      }

      public RemoteDebug.DebugFrame getDefaultInstanceForType() {
        return RemoteDebug.DebugFrame.getDefaultInstance();
      }

      public RemoteDebug.DebugFrame build() {
        RemoteDebug.DebugFrame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RemoteDebug.DebugFrame buildPartial() {
        RemoteDebug.DebugFrame result = new RemoteDebug.DebugFrame(this);
        result.defaultImage_ = defaultImage_;
        result.threshImage_ = threshImage_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RemoteDebug.DebugFrame) {
          return mergeFrom((RemoteDebug.DebugFrame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RemoteDebug.DebugFrame other) {
        if (other == RemoteDebug.DebugFrame.getDefaultInstance()) return this;
        if (other.getDefaultImage() != com.google.protobuf.ByteString.EMPTY) {
          setDefaultImage(other.getDefaultImage());
        }
        if (other.getThreshImage() != com.google.protobuf.ByteString.EMPTY) {
          setThreshImage(other.getThreshImage());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RemoteDebug.DebugFrame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RemoteDebug.DebugFrame) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString defaultImage_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * the encoded image of just the normal view from the camera
       * </pre>
       *
       * <code>optional bytes defaultImage = 1;</code>
       */
      public com.google.protobuf.ByteString getDefaultImage() {
        return defaultImage_;
      }
      /**
       * <pre>
       * the encoded image of just the normal view from the camera
       * </pre>
       *
       * <code>optional bytes defaultImage = 1;</code>
       */
      public Builder setDefaultImage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        defaultImage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the encoded image of just the normal view from the camera
       * </pre>
       *
       * <code>optional bytes defaultImage = 1;</code>
       */
      public Builder clearDefaultImage() {
        
        defaultImage_ = getDefaultInstance().getDefaultImage();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString threshImage_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * the encoded image containing the thresholded image generated by the OpenGL shader
       * </pre>
       *
       * <code>optional bytes threshImage = 2;</code>
       */
      public com.google.protobuf.ByteString getThreshImage() {
        return threshImage_;
      }
      /**
       * <pre>
       * the encoded image containing the thresholded image generated by the OpenGL shader
       * </pre>
       *
       * <code>optional bytes threshImage = 2;</code>
       */
      public Builder setThreshImage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        threshImage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the encoded image containing the thresholded image generated by the OpenGL shader
       * </pre>
       *
       * <code>optional bytes threshImage = 2;</code>
       */
      public Builder clearThreshImage() {
        
        threshImage_ = getDefaultInstance().getThreshImage();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:DebugFrame)
    }

    // @@protoc_insertion_point(class_scope:DebugFrame)
    private static final RemoteDebug.DebugFrame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RemoteDebug.DebugFrame();
    }

    public static RemoteDebug.DebugFrame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DebugFrame>
        PARSER = new com.google.protobuf.AbstractParser<DebugFrame>() {
      public DebugFrame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DebugFrame(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DebugFrame> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DebugFrame> getParserForType() {
      return PARSER;
    }

    public RemoteDebug.DebugFrame getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DebugFrame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DebugFrame_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021RemoteDebug.proto\"7\n\nDebugFrame\022\024\n\014def" +
      "aultImage\030\001 \001(\014\022\023\n\013threshImage\030\002 \001(\014b\006pr" +
      "oto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_DebugFrame_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DebugFrame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DebugFrame_descriptor,
        new java.lang.String[] { "DefaultImage", "ThreshImage", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
